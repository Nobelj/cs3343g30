/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.1.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
	id 'application'
	id 'org.openjfx.javafxplugin' version '0.0.8'
	id 'java'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

task debug(type:JavaExec) {
	group 'application'
	description 'debug'
   jvmArgs '-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=9099'
   main = 'cs3343g30.MyApplication'
   classpath = sourceSets.main.runtimeClasspath
} 

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'junit:junit:4.12'
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    // https://mvnrepository.com/artifact/junit/junit
	testImplementation group: 'junit', name: 'junit', version: '4.12'
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:31.1-jre'
    
    testImplementation  group: 'org.testfx', name: 'testfx-junit', version : '4.0.15-alpha'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

javafx {
	version = "13.0.2"
	modules = [ 'javafx.controls', 'javafx.fxml' ]
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
